

@function _count-token-before($search, $token, $pointer){
 $count: 0;
 @for $i from 1 to $pointer{
  $index: $pointer - $i;
  @if ( str-slice($search, $index, $index) == $token){
    $count: $count + 1;
  }
  @else{
   @return $count;
  }
 }
 @return $count;
}


// Will find the first non escaped quote in a JSON String
// --------------------------------------------------------------------------------
// @param [string] $string: to search in
// --------------------------------------------------------------------------------
// @return [number] position of the last non escaped quote
@function _find-ending-quote($string){
  $backslash: str-slice("\\", 1, 1); // Dirty hack to have a single backslash
  $search: $string;

  $end-quote-found: false;
  $position: 0;


  @while not $end-quote-found {
    $index: str-index($search, '"');

    @if not $index or $index == 0 { // No end of string found
      @return $index;
    }

    @else {
      $position: $position + $index;
    }

    $char-before-quote: str-slice($search, $index - 1, $index - 1);

    @if $char-before-quote != $backslash or _count-token-before($search, $backslash, $index) % 2 == 0{
        $end-quote-found: true;
    }

    $search: str-slice($search, $index + 1);
  }

  @return $position;
}